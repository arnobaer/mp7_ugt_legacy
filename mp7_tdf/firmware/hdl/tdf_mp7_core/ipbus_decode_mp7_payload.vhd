--
-- Address decode logic for ipbus fabric.
-- Do NOT edit this file it will be AUTOGENERATED by gtu-ipbus-decoder.
--

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use work.math_pkg.all;


package ipbus_decode_mp7_payload is

    -- Number of slaves defined in the address table.
    constant N_SLAVES: positive := 64;

    -- Define selection vector format.
    constant IPBUS_SEL_WIDTH: positive := log2c(N_SLAVES);
    subtype ipbus_sel_t is std_logic_vector(IPBUS_SEL_WIDTH - 1 downto 0);
    function ipbus_sel_mp7_payload(addr : in std_logic_vector(31 downto 0)) return ipbus_sel_t;

    -- Item\'s unique identification index, used in slave implementation.
    constant C_IPB_TDF_MODULE_INFO: integer := 0;
    constant C_IPB_TDF_CONTROL: integer := 1;
    constant C_IPB_TDF3: integer := 2;
    constant C_IPB_TDF4: integer := 3;

    type c_ipb_tdfmem_array is array (0 to 59) of natural;
    constant C_IPB_TDFMEM : c_ipb_tdfmem_array := (4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63);

    -- Item\'s address width in bits, used in slave implementation.
    constant C_IPB_TDF_MODULE_INFO_SIZE: integer := 5;
    constant C_IPB_TDF_CONTROL_SIZE: integer := 4;
    constant C_IPB_TDF3_SIZE: integer := 4;
    constant C_IPB_TDF4_SIZE: integer := 4;
    constant C_IPB_TDFMEM_SIZE: integer := 12;

end ipbus_decode_mp7_payload;

package body ipbus_decode_mp7_payload is

    function ipbus_sel_mp7_payload(addr : in std_logic_vector(31 downto 0)) return ipbus_sel_t is
        variable sel: ipbus_sel_t;

    begin
        if    std_match(addr, "100000000000000000000000000-----") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDF_MODULE_INFO, IPBUS_SEL_WIDTH)); -- 0x80000000
        elsif std_match(addr, "1000000000000000000000000010----") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDF_CONTROL, IPBUS_SEL_WIDTH)); -- 0x80000020
        elsif std_match(addr, "1000000000000000000000000011----") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDF3, IPBUS_SEL_WIDTH));        -- 0x80000030
        elsif std_match(addr, "1000000000000000000000000100----") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDF4, IPBUS_SEL_WIDTH));        -- 0x80000040
        elsif std_match(addr, "10000000001100000000------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(0), IPBUS_SEL_WIDTH));   -- 0x80300000 .. 0x80300FFF
        elsif std_match(addr, "10000000001100000001------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(1), IPBUS_SEL_WIDTH));   -- 0x80301000 .. 0x80301FFF
        elsif std_match(addr, "10000000001100000010------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(2), IPBUS_SEL_WIDTH));   -- 0x80302000 .. 0x80302FFF
        elsif std_match(addr, "10000000001100000011------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(3), IPBUS_SEL_WIDTH));   -- 0x80303000 .. 0x80303FFF
        elsif std_match(addr, "10000000001100000100------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(4), IPBUS_SEL_WIDTH));   -- 0x80304000 .. 0x80304FFF
        elsif std_match(addr, "10000000001100000101------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(5), IPBUS_SEL_WIDTH));   -- 0x80305000 .. 0x80305FFF
        elsif std_match(addr, "10000000001100000110------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(6), IPBUS_SEL_WIDTH));   -- 0x80306000 .. 0x80306FFF
        elsif std_match(addr, "10000000001100000111------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(7), IPBUS_SEL_WIDTH));   -- 0x80307000 .. 0x80307FFF
        elsif std_match(addr, "10000000001100001000------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(8), IPBUS_SEL_WIDTH));   -- 0x80308000 .. 0x80308FFF
        elsif std_match(addr, "10000000001100001001------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(9), IPBUS_SEL_WIDTH));   -- 0x80309000 .. 0x80309FFF
        elsif std_match(addr, "10000000001100001010------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(10), IPBUS_SEL_WIDTH));  -- 0x8030A000 .. 0x8030AFFF
        elsif std_match(addr, "10000000001100001011------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(11), IPBUS_SEL_WIDTH));  -- 0x8030B000 .. 0x8030BFFF
        elsif std_match(addr, "10000000001100001100------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(12), IPBUS_SEL_WIDTH));  -- 0x8030C000 .. 0x8030CFFF
        elsif std_match(addr, "10000000001100001101------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(13), IPBUS_SEL_WIDTH));  -- 0x8030D000 .. 0x8030DFFF
        elsif std_match(addr, "10000000001100001110------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(14), IPBUS_SEL_WIDTH));  -- 0x8030E000 .. 0x8030EFFF
        elsif std_match(addr, "10000000001100001111------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(15), IPBUS_SEL_WIDTH));  -- 0x8030F000 .. 0x8030FFFF
        elsif std_match(addr, "10000000001100010000------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(16), IPBUS_SEL_WIDTH));  -- 0x80310000 .. 0x80310FFF
        elsif std_match(addr, "10000000001100010001------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(17), IPBUS_SEL_WIDTH));  -- 0x80311000 .. 0x80311FFF
        elsif std_match(addr, "10000000001100010010------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(18), IPBUS_SEL_WIDTH));  -- 0x80312000 .. 0x80312FFF
        elsif std_match(addr, "10000000001100010011------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(19), IPBUS_SEL_WIDTH));  -- 0x80313000 .. 0x80313FFF
        elsif std_match(addr, "10000000001100010100------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(20), IPBUS_SEL_WIDTH));  -- 0x80314000 .. 0x80314FFF
        elsif std_match(addr, "10000000001100010101------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(21), IPBUS_SEL_WIDTH));  -- 0x80315000 .. 0x80315FFF
        elsif std_match(addr, "10000000001100010110------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(22), IPBUS_SEL_WIDTH));  -- 0x80316000 .. 0x80316FFF
        elsif std_match(addr, "10000000001100010111------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(23), IPBUS_SEL_WIDTH));  -- 0x80317000 .. 0x80317FFF
        elsif std_match(addr, "10000000001100011000------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(24), IPBUS_SEL_WIDTH));  -- 0x80318000 .. 0x80318FFF
        elsif std_match(addr, "10000000001100011001------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(25), IPBUS_SEL_WIDTH));  -- 0x80319000 .. 0x80319FFF
        elsif std_match(addr, "10000000001100011010------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(26), IPBUS_SEL_WIDTH));  -- 0x8031A000 .. 0x8031AFFF
        elsif std_match(addr, "10000000001100011011------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(27), IPBUS_SEL_WIDTH));  -- 0x8031B000 .. 0x8031BFFF
        elsif std_match(addr, "10000000001100011100------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(28), IPBUS_SEL_WIDTH));  -- 0x8031C000 .. 0x8031CFFF
        elsif std_match(addr, "10000000001100011101------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(29), IPBUS_SEL_WIDTH));  -- 0x8031D000 .. 0x8031DFFF
        elsif std_match(addr, "10000000001100011110------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(30), IPBUS_SEL_WIDTH));  -- 0x8031E000 .. 0x8031EFFF
        elsif std_match(addr, "10000000001100011111------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(31), IPBUS_SEL_WIDTH));  -- 0x8031F000 .. 0x8031FFFF
        elsif std_match(addr, "10000000001100100000------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(32), IPBUS_SEL_WIDTH));  -- 0x80320000 .. 0x80320FFF
        elsif std_match(addr, "10000000001100100001------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(33), IPBUS_SEL_WIDTH));  -- 0x80321000 .. 0x80321FFF
        elsif std_match(addr, "10000000001100100010------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(34), IPBUS_SEL_WIDTH));  -- 0x80322000 .. 0x80322FFF
        elsif std_match(addr, "10000000001100100011------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(35), IPBUS_SEL_WIDTH));  -- 0x80323000 .. 0x80323FFF
        elsif std_match(addr, "10000000001100100100------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(36), IPBUS_SEL_WIDTH));  -- 0x80324000 .. 0x80324FFF
        elsif std_match(addr, "10000000001100100101------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(37), IPBUS_SEL_WIDTH));  -- 0x80325000 .. 0x80325FFF
        elsif std_match(addr, "10000000001100100110------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(38), IPBUS_SEL_WIDTH));  -- 0x80326000 .. 0x80326FFF
        elsif std_match(addr, "10000000001100100111------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(39), IPBUS_SEL_WIDTH));  -- 0x80327000 .. 0x80327FFF
        elsif std_match(addr, "10000000001100101000------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(40), IPBUS_SEL_WIDTH));  -- 0x80328000 .. 0x80328FFF
        elsif std_match(addr, "10000000001100101001------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(41), IPBUS_SEL_WIDTH));  -- 0x80329000 .. 0x80329FFF
        elsif std_match(addr, "10000000001100101010------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(42), IPBUS_SEL_WIDTH));  -- 0x8032A000 .. 0x8032AFFF
        elsif std_match(addr, "10000000001100101011------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(43), IPBUS_SEL_WIDTH));  -- 0x8032B000 .. 0x8032BFFF
        elsif std_match(addr, "10000000001100101100------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(44), IPBUS_SEL_WIDTH));  -- 0x8032C000 .. 0x8032CFFF
        elsif std_match(addr, "10000000001100101101------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(45), IPBUS_SEL_WIDTH));  -- 0x8032D000 .. 0x8032DFFF
        elsif std_match(addr, "10000000001100101110------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(46), IPBUS_SEL_WIDTH));  -- 0x8032E000 .. 0x8032EFFF
        elsif std_match(addr, "10000000001100101111------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(47), IPBUS_SEL_WIDTH));  -- 0x8032F000 .. 0x8032FFFF
        elsif std_match(addr, "10000000001100110000------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(48), IPBUS_SEL_WIDTH));  -- 0x80330000 .. 0x80330FFF
        elsif std_match(addr, "10000000001100110001------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(49), IPBUS_SEL_WIDTH));  -- 0x80331000 .. 0x80331FFF
        elsif std_match(addr, "10000000001100110010------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(50), IPBUS_SEL_WIDTH));  -- 0x80332000 .. 0x80332FFF
        elsif std_match(addr, "10000000001100110011------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(51), IPBUS_SEL_WIDTH));  -- 0x80333000 .. 0x80333FFF
        elsif std_match(addr, "10000000001100110100------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(52), IPBUS_SEL_WIDTH));  -- 0x80334000 .. 0x80334FFF
        elsif std_match(addr, "10000000001100110101------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(53), IPBUS_SEL_WIDTH));  -- 0x80335000 .. 0x80335FFF
        elsif std_match(addr, "10000000001100110110------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(54), IPBUS_SEL_WIDTH));  -- 0x80336000 .. 0x80336FFF
        elsif std_match(addr, "10000000001100110111------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(55), IPBUS_SEL_WIDTH));  -- 0x80337000 .. 0x80337FFF
        elsif std_match(addr, "10000000001100111000------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(56), IPBUS_SEL_WIDTH));  -- 0x80338000 .. 0x80338FFF
        elsif std_match(addr, "10000000001100111001------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(57), IPBUS_SEL_WIDTH));  -- 0x80339000 .. 0x80339FFF
        elsif std_match(addr, "10000000001100111010------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(58), IPBUS_SEL_WIDTH));  -- 0x8033A000 .. 0x8033AFFF
        elsif std_match(addr, "10000000001100111011------------") then sel := ipbus_sel_t(to_unsigned(C_IPB_TDFMEM(59), IPBUS_SEL_WIDTH));  -- 0x8033B000 .. 0x8033BFFF
        else
            sel := ipbus_sel_t(to_unsigned(N_SLAVES, IPBUS_SEL_WIDTH));
        end if;

        return sel;

    end function ipbus_sel_mp7_payload;

end ipbus_decode_mp7_payload;
